{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","setLimite","useState","inputValue","setInputValue","numberValue","setNumberValue","onSubmit","e","preventDefault","trim","length","cats","className","id","type","value","onChange","target","placeholder","required","onClick","getGifts","category","limit","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GiftGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","limite","categoria","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.380d0854.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategorias, setLimite }) => { //se desestructuro props\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [numberValue, setNumberValue] = useState(10);\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (e) => {\r\n        setNumberValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cats => [inputValue, ...cats,]);\r\n            setInputValue('');\r\n        }\r\n\r\n        if (numberValue.length > 0) {\r\n            setLimite(numberValue);\r\n        }\r\n    }\r\n\r\n    const handleClean = (e) => {\r\n        e.preventDefault();\r\n        setCategorias([]);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row g-3\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <label className=\"input-group-text\">Buscar</label>\r\n                            <input\r\n                                id=\"txtBuscar\"\r\n                                type=\"text\"\r\n                                value={inputValue}\r\n                                onChange={handleInputChange}\r\n                                className=\"form-control\"\r\n                                placeholder=\"ingrese para buscar...\"\r\n                                required />\r\n                            <label className=\"input-group-text\">Limite</label>\r\n                            <input\r\n                                id=\"txtCantidad\"\r\n                                type=\"number\"\r\n                                value={numberValue}\r\n                                onChange={handleNumberChange}\r\n                                className=\"form-control cantidad\"\r\n                            />\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Buscar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <button onClick={handleClean} className=\"btn btn-danger\">\r\n                            Limpiar\r\n                        </button>   \r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifts = async (category, limit) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=2k5QHQccKC7CXWuApE4wQJrcEMlsbQ8c`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id, title, url}) => {\r\n    // console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({ category, limit }) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category, limit);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__faden\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img =>\r\n                        <GiftGridItem\r\n                            key={img.id}\r\n                            {...img} />)\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category, limit) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category, limit)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category, limit]);\r\n\r\n    return state;\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n    const [limite, setLimite] = useState(20);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Gif Expert App</h1>\r\n            <hr />\r\n            <AddCategory setCategorias={setCategorias} \r\n                         setLimite={setLimite} />\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        // return (<li key={categoria}> {categoria} </li>);\r\n                         <GifGrid \r\n                            key={categoria}\r\n                            category={categoria}\r\n                            limit={limite}\r\n                            />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>);\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}